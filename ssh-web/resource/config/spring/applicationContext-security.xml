<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
              http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
              http://www.springframework.org/schema/security
              http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    <!-- 配置不需要安全管理的界面 -->
    <http pattern="/web/css/**" security="none"/>
    <http pattern="/web/js/**" security="none"/>
    <http pattern="/web/images/**" security="none"/>
    <http pattern="/login.jsp" security="none"/>
    <http pattern="/noImpower.jsp" security="none"/>
    <!-- 当用户出现错误时的页面 -->
    <http use-expressions='true' entry-point-ref="myAuthenticationEntryPoint" access-denied-page="/noImpower.jsp">
        <!-- 配置spring默认的访问权限 -->
        <intercept-url pattern="/d.jsp" access="ROLE_abc"/>
        <intercept-url pattern="/e.jsp" access="ROLE_def"/>

        <!-- 会话管理 -->
        <session-management invalid-session-url="/timeout.jsp">
            <concurrency-control max-sessions="10" error-if-maximum-exceeded="true"/>
        </session-management>

        <!-- 认证和授权 -->
        <custom-filter ref="myAuthenticationFilter" position="FORM_LOGIN_FILTER"/>
        <custom-filter ref="myAuthorizationFilter" before="FILTER_SECURITY_INTERCEPTOR"/>

        <!-- 登出管理 -->
        <logout invalidate-session="true" logout-url="/j_spring_security_logout"/>
    </http>
    <!-- 未登录的切入点 -->
    <beans:bean id="myAuthenticationEntryPoint"
                class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:property name="loginFormUrl" value="/login.jsp"/>
    </beans:bean>

    <!-- 登录验证器：用户有没有登录的资格 -->
    <beans:bean id="myAuthenticationFilter" class="com.cbd.security.MyAuthenticationFilter">
        <beans:property name="authenticationManager" ref="myAuthenticationManager"/>
        <beans:property name="filterProcessesUrl" value="/j_spring_security_check"/>
        <beans:property name="authenticationSuccessHandler">
            <beans:bean
                    class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
                <beans:property name="defaultTargetUrl" value="/adm/adm_login.action"/>
            </beans:bean>
        </beans:property>
        <beans:property name="authenticationFailureHandler">
            <beans:bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
                <beans:property name="defaultFailureUrl" value="/login.jsp"/>
            </beans:bean>
        </beans:property>
        <beans:property name="as" ref="as"/>
    </beans:bean>


    <!-- 用户拥有的权限：登录后取得用户所保有的权限信息 -->
    <authentication-manager alias="myAuthenticationManager">
        <authentication-provider user-service-ref="myUserDetailService"/>
    </authentication-manager>

    <beans:bean id="myUserDetailService" class="com.cbd.security.MyUserDetailServiceImpl">
        <beans:property name="as" ref="as"/>
    </beans:bean>

    <!-- 认证过滤器 -->
    <beans:bean id="myAuthorizationFilter" class="com.cbd.security.MyAuthorizationFilter">
        <!-- 用户拥有的权限 -->
        <beans:property name="authenticationManager" ref="myAuthenticationManager"/>
        <!-- 用户是否拥有所请求资源的权限 -->
        <beans:property name="accessDecisionManager">
            <beans:bean class="com.cbd.security.MyAccessDecisionManager"/>
        </beans:property>
        <!-- 资源与权限对应关系 -->
        <beans:property name="securityMetadataSource">
            <beans:bean class="com.cbd.security.MySecurityMetadataSource">
                <beans:constructor-arg name="rs" ref="rs"/>
            </beans:bean>
        </beans:property>
    </beans:bean>


</beans:beans>